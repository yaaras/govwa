package rce

import (
	"github.com/govwa/util"
	"github.com/govwa/util/middleware"
	"github.com/julienschmidt/httprouter"
	"net/http"
	"os/exec"
	"strings"
)

type RCE struct {
	Output string
}

func New() RCE {
	return RCE{}
}
func (self RCE) SetRouter(r *httprouter.Router) {
	mw := middleware.New()
	r.GET("/rce1", mw.LoggingMiddleware(mw.CapturePanic(mw.AuthCheck(rce1Handler))))
	r.POST("/rce1", mw.LoggingMiddleware(mw.CapturePanic(mw.AuthCheck(ping))))
}

func rce1Handler(w http.ResponseWriter, r *http.Request, _ httprouter.Params) {
	data := make(map[string]interface{})
	data["title"] = "Command Injection"
	util.SafeRender(w, r, "template.rce1", data)
}

func ping(w http.ResponseWriter, r *http.Request, _ httprouter.Params) {
	if r.Method == "POST" {
		data := make(map[string]interface{})
		err := r.ParseForm()
		if err != nil {
			return
		}

		command := r.Form["Command"][0]

		full_cmd := strings.Split(command, " ")
		cmd, args := full_cmd[0], full_cmd[1:]

		out, _ := exec.Command(cmd, args...).Output()
		data["output"] = string(out)

		data["title"] = "Command Injection"
		util.SafeRender(w, r, "template.rce1", data)

	}
}
